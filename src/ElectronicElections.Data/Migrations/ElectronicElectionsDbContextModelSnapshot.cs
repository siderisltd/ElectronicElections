// <auto-generated />
using System;
using ElectronicElections.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectronicElections.Data.Migrations
{
    [DbContext(typeof(ElectronicElectionsDbContext))]
    partial class ElectronicElectionsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElectronicElections.Data.Models.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CandidateType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Goals")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ImgLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WikiLink")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df70469c-9d91-4390-8cca-e0e3b5d03e51"),
                            CandidateType = 1,
                            Description = "ГЕРБ е дясноцентристка, популистка, консервативна и проевропейска политическа партия в България. Тя е основана на 3 декември 2006 г. по инициатива на кмета на София Бойко Борисов, на основата на създаденото по-рано през същата година гражданско сдружение с име „Граждани за европейско развитие на България“ и абревиатура „ГЕРБ“.[6] Централата на партията се намира в Националния дворец на културата, на площад „България“ №1 в.",
                            Goals = "Унищожаване на Българската икономика и популация. Собствена изгода",
                            ImgLink = "https://m.netinfo.bg/media/images/34784/34784806/991-ratio-kotka-kuche.jpg",
                            Name = "ГЕРБ",
                            WikiLink = "https://m.netinfo.bg/media/images/34784/34784806/991-ratio-kotka-kuche.jpg"
                        },
                        new
                        {
                            Id = new Guid("53b319cb-b0e0-4f22-af56-2fd86384361f"),
                            CandidateType = 1,
                            Description = "Движението за права и свободи (ДПС) е центристка политическа партия в България, ползваща се с подкрепата главно на етническите турци и други мюсюлмани в България, определяща се като либерална партия и член на Либералния интернационал. ДПС е определяно като един от основните поддръжници на олигархичния модел на държавно управление.[1]",
                            Goals = "Голове тест 123",
                            ImgLink = "https://m5.netinfo.bg/media/images/15946/15946663/896-504-kuche-i-kote.jpg",
                            Name = "ДПС",
                            WikiLink = "https://bg.wikipedia.org/wiki/ДПС"
                        },
                        new
                        {
                            Id = new Guid("24fe9645-55b7-4a09-ac60-ca2548a61899"),
                            CandidateType = 1,
                            Description = "„Атака“ е политическа партия в България[2][3], която използва популистки послания, за да спечели симпатии от избирателите.[4] Според някои мнения „Атака“ е крайнодясна партия[1], според други – крайнолява.[5] Заема проруски позиции.[6]",
                            Goals = "Партията е парламентарно представена, издава партиен вестник („Атака“) и притежава своя телевизия – „ТВ Алфа“.",
                            ImgLink = "https://m.netinfo.bg/media/images/32905/32905551/991-ratio-kotki-i-kucheta.jpg",
                            Name = "Атака",
                            WikiLink = "https://bg.wikipedia.org/wiki/Атака_(партия)"
                        },
                        new
                        {
                            Id = new Guid("78823942-b5d5-4377-80c6-742d81362625"),
                            CandidateType = 0,
                            Description = "Тест инфо",
                            Goals = "Партията е парламентарно представена, издава партиен вестник („Атака“) и притежава своя телевизия – „ТВ Алфа“.",
                            ImgLink = "https://static.framar.bg/thumbs/6/lifestyle/usmivka-kuche.png",
                            Name = "Волен Сидеров",
                            WikiLink = "https://bg.wikipedia.org/wiki/Волен_Сидеров"
                        });
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.CandidateElectionType", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ElectionTypeId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "ElectionTypeId");

                    b.HasIndex("ElectionTypeId");

                    b.ToTable("CandidateElectionType");

                    b.HasData(
                        new
                        {
                            CandidateId = new Guid("df70469c-9d91-4390-8cca-e0e3b5d03e51"),
                            ElectionTypeId = 0
                        },
                        new
                        {
                            CandidateId = new Guid("df70469c-9d91-4390-8cca-e0e3b5d03e51"),
                            ElectionTypeId = 2
                        },
                        new
                        {
                            CandidateId = new Guid("df70469c-9d91-4390-8cca-e0e3b5d03e51"),
                            ElectionTypeId = 1
                        },
                        new
                        {
                            CandidateId = new Guid("24fe9645-55b7-4a09-ac60-ca2548a61899"),
                            ElectionTypeId = 0
                        },
                        new
                        {
                            CandidateId = new Guid("24fe9645-55b7-4a09-ac60-ca2548a61899"),
                            ElectionTypeId = 2
                        },
                        new
                        {
                            CandidateId = new Guid("53b319cb-b0e0-4f22-af56-2fd86384361f"),
                            ElectionTypeId = 0
                        },
                        new
                        {
                            CandidateId = new Guid("53b319cb-b0e0-4f22-af56-2fd86384361f"),
                            ElectionTypeId = 2
                        },
                        new
                        {
                            CandidateId = new Guid("78823942-b5d5-4377-80c6-742d81362625"),
                            ElectionTypeId = 1
                        });
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.ElectionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("WikiLink")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("ElectionTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Избори за народно събрание",
                            Name = "NationalAssembly",
                            WikiLink = "https://bg.wikipedia.org/wiki/Избори_в_България#За_народно_събрание"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Президентски избори",
                            Name = "PresidentalElections",
                            WikiLink = "https://bg.wikipedia.org/wiki/Избори_в_България#За_президент"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Избори за европейски парламент",
                            Name = "EuropeanParliament",
                            WikiLink = "https://bg.wikipedia.org/wiki/Избори_в_България#За_европейски_парламент"
                        });
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElectionsType")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<Guid>("VerificationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VotedFromIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VoterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.Voter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IpInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.CandidateElectionType", b =>
                {
                    b.HasOne("ElectronicElections.Data.Models.Candidate", "Candidate")
                        .WithMany("ParticipantInElections")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicElections.Data.Models.ElectionType", "ElectionType")
                        .WithMany("Candidates")
                        .HasForeignKey("ElectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElectronicElections.Data.Models.Vote", b =>
                {
                    b.HasOne("ElectronicElections.Data.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicElections.Data.Models.Voter", "Voter")
                        .WithMany()
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
